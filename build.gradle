apply plugin: 'groovy'
import groovy.json.JsonSlurper

sourceSets {
    jobs {
        groovy {
            srcDirs 'jobs'
        }
    }
}

repositories {
/*
    mavenCentral()
    jcenter()
    maven { url 'http://repo.jenkins-ci.org/releases/' }
*/
    maven {
      url "http://${project.ext.nexus}/repository/public"
    }
}

configurations {
    testPlugins {}
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.1.3'
    compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:2.2.2' // used by Spock

    // Jenkins test harness dependencies
    testCompile 'org.jenkins-ci.main:jenkins-test-harness:2.8'
    testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}"
    //testCompile "org.jenkins-ci.main:jenkins-war:${jenkinsVersion}:war-for-test@jar"

    // Job DSL plugin including plugin dependencies
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
    testCompile "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
    testCompile 'org.jenkins-ci.plugins:structs:1.1@jar'
    testCompile 'org.jenkins-ci.plugins:cloudbees-folder:4.4@jar'
    //testCompile 'junit:junit:4.12'

    // plugins to install in test instance
    testPlugins 'org.jenkins-ci.plugins:ghprb:1.31.4'
    testPlugins 'com.coravy.hudson.plugins.github:github:1.19.0'
    testPlugins 'org.jenkins-ci.plugins:build-flow-plugin:0.20'
    testPlugins 'org.jenkins-ci.plugins:parameterized-trigger:2.3.2'
    //plugins to install in test instance
    for (plugin in new JsonSlurper().parseText(jenkinsPlugins)) {
      testPlugins 'org.jenkins-ci.plugins:' + plugin
    }
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'

    doLast {
        def baseNames = source.collect { it.name[0..it.name.lastIndexOf('.')-1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
    dependsOn tasks.resolveTestPlugins
    inputs.files sourceSets.jobs.groovy.srcDirs

    // set build directory for Jenkins test harness, JENKINS-26331
    systemProperty 'buildDirectory', project.buildDir.absolutePath
}

task rest(dependsOn: 'classes', type: JavaExec) {
    main = 'com.dslexample.rest.RestApiScriptRunner'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}

task debugXml(dependsOn: 'classes', type: JavaExec) {
    main = 'com.dslexample.debug.XmlOutputRunner'
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
